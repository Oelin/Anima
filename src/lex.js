let s,n=r=>i=>(m=s.match(r),v=!m||m[2]||m[1]||m[0],(!m||i&&i!=v)?e():(s=s.slice(v.length),v)),e=()=>{throw'syntax error'};module.exports=o=>Object.assign(o,{use:c=>s=c,here:()=>s,fail:e,string:n(/^'[^']*'/),number:n(/^(0x[0-9a-fA-F]+|0b[01]+|\d+\.\d+|\d+)/),punc:n(/^[\(\)\[\]\,]|^\s*(\->)/),operator:n(/^((and|or|not)(\W|$)|==|!=|<<|>>|<<=|>>=|<=|>=|<|>|\+=|\-=|\*\*=|\*=|\/=|&=|\|=|\^=|=|\+|\-|\*\*|\*|\/|&|\||\^|~|\.|\[|\()/),keyword:n(/^(if|elif|else|while|for|in|def|return|break|end)(?:\W|$)/),ident:n(/^(?:(?!(if|elif|else|while|for|in|def|return|break|end|and|or|not)(\W|$)))[a-zA-Z_][\w_]*/),space:n(/^\s+/),end:n(/^$/),sticky:['=','+=','*=','/=','^=','&=','|=','<<=','>>=','*=','**'],infix:{'=':1,'+=':1,'*=':1,'/=':1,'^=':1,'&=':1,'|=':1,'<<=':1,'>>=':1,'**=':1,'or':2,'and':3,'|':4,'^':5,'&':6,'==':7,'!=':7,'<':8,'>':8,'<=':8,'>=':8,'<<':9,'>>':9,'+':10,'-':10,'/':11,'*':11,'**':12,'(':14,'[':14,'.':14},prefix:{'-':13,'+':13,'~':13,'not':13}})
